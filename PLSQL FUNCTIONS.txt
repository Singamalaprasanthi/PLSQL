
EXAMPLE 1 :

create or replace function adder(n1 in number, n2 in number)    
return number    
is     
n3 number(8);    
begin    
n3 :=n1+n2;    
return n3;    
end;    
/    
CALLING  A FUNCTION :

DECLARE    
   n3 number(2);    
BEGIN    
   n3 := adder(11,22);    
   dbms_output.put_line('Addition is: ' || n3);    
END;    
/    
OUTPUT :

Addition is: 33
Statement processed.
0.05 seconds

EXAMPLE 2 :

DECLARE  
   a number;  
   b number;  
   c number;  
FUNCTION findMax(x IN number, y IN number)   
RETURN number  
IS  
    z number;  
BEGIN  
   IF x > y THEN  
      z:= x;  
   ELSE  
      Z:= y;  
   END IF;  
  
   RETURN z;  
END;   
BEGIN  
   a:= 23;  
   b:= 45;  
  
   c := findMax(a, b);  
   dbms_output.put_line(' Maximum of (23,45): ' || c);  
END;  
/  

OUTPUT :

Maximum of (23,45): 45
Statement processed.
0.02 seconds


EXAMPLE 3 :

Select * from customers; 
 
+----+----------+-----+-----------+----------+ 
 | ID  | NAME     | AGE | ADDRESS | SALARY | 
+----+----------+-----+-----------+----------+ 
|  1 | Prasanthi      |  32 | Ahmedabad  |  2000.00  | 
|  2 | Haritha         |  25 | Delhi            |  1500.00  | 
|  3 | Sandhya       |  23 | Kota            |  2000.00  | 
|  4 | Mahi            |  25 | Mumbai        |  6500.00  | 
|  5 | Hari             |  27 | Bhopal          |  8500.00  | 
|  6 | Jyo              |  22 | MP               |  4500.00   | 
+----+----------+-----+-----------+----------+  


CREATE OR REPLACE FUNCTION totalCustomers 
RETURN number IS 
   total number(2) := 0; 
BEGIN 
   SELECT count(*) into total 
   FROM customers; 
    
   RETURN total; 
END; 
/ 

Function Created.


CALLING FUNCTION :

DECLARE 
   c number(2); 
BEGIN 
   c := totalCustomers(); 
   dbms_output.put_line('Total no. of Customers: ' || c); 
END; 
/

OUTPUT :

Total no. of Customers: 6
PL/SQL procedure successfully completed.

EXAMPLE 4 :

DECLARE 
   a number; 
   b number; 
   c number; 
FUNCTION findMax(x IN number, y IN number)  
RETURN number 
IS 
    z number; 
BEGIN 
   IF x > y THEN 
      z:= x; 
   ELSE 
      Z:= y; 
   END IF;  
   RETURN z; 
END; 
BEGIN 
   a:= 40; 
   b:= 50;  
   c := findMax(a, b); 
   dbms_output.put_line(' Maximum of (23,45): ' || c); 
END; 
/ 

OUTPUT :
Maximum of (40,50): 50
PL/SQL procedure successfully completed.

EXAMPLE 5 :

DECLARE 
   num number; 
   factorial number;  
   
FUNCTION fact(x number) 
RETURN number  
IS 
   f number; 
BEGIN 
   IF x=0 THEN 
      f := 1; 
   ELSE 
      f := x * fact(x-1); 
   END IF; 
RETURN f; 
END;  

BEGIN 
   num:= 6; 
   factorial := fact(num); 
   dbms_output.put_line(' Factorial '|| num || ' is ' || factorial); 
END; 
/

OUTPUT :

Factorial 6 is 720
PL/SQL procedure successfully completed.





















